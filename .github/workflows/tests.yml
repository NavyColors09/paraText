name: Tests

on:
  push:
      branches: [main]
  pull_request:
      branches: [main]

jobs:
#   code_style:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: bash -l {0}
#     steps:
#       - uses: actions/checkout@v3
#       - uses: conda-incubator/setup-miniconda@v2
#         with:
#           activate-environment: paraText
#           environment-file: environment.yml
#       - run: pycodestyle $(git ls-files "*.py")
  
#  Add this back when functional tests are written
#  functional_tests:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: bash -l {0}
#     steps:
#       - uses: actions/checkout@v3
#       - uses: conda-incubator/setup-miniconda@v2
#         with:
#           activate-environment: gtex
#           environment-file: environment.yml
#       - run: bash test_search_cutoff.sh

  unit_tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: paraText
          environment-file: environment.yml
      - run: |
          cd test
          cd unit
          python -m unittest test_utils |
  class_function_unit_test:
    strategy:
      matrix:
         os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@v1

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Run unit test
        run: python test/unit/test_class_funcs.py


